{"version":3,"sources":["constants/index.ts","components/Header/HeaderStyle.ts","components/Header/Header.tsx","components/Menu/MenuStyle.ts","components/Menu/Menu.tsx","components/localStorage/LocalStorage.ts","components/Pages/PagesStyle.ts","components/Pages/AllRecipes.tsx","components/AddRecipe/AddRecipeStyle.ts","components/AddRecipe/AddRecipe.tsx","components/Pages/VeganRecipes.tsx","components/Pages/NonVeganRecipes.tsx","components/Footer/FooterStyle.ts","components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","store/RecipesReducer.ts","store/index.ts","index.tsx"],"names":["PATH_ALL_RECIPES","PATH_V_RECIPES","PATH_NV_RECIPES","PATH_ADD_NEW_RECIPE","VEGAN_HT","NON_VEGAN_HT","DEFAULT_RECIPES_AT","ADD_RECIPE_AT","ALL_RECIPES_AT","HeaderContainer","styled","div","TitleContainer","CircleContainer","LinkStyle","flex","textDecoration","color","Header","to","Constant","style","Style","MenuWrapperContainer","MenuBlockContainer","MenuButtonContainer","Menu","dispatch","useDispatch","onClick","type","saveState","key","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","RecipesContainer","RecipeContainer","RecipeImgContainer","img","RecipeIngredientsContainer","RecipeProcessContainer","RecipeHashtagContainer","AllRecipes","renderRecipes","map","item","index","recipeTitle","src","recipeIMGLink","alt","recipeIngredients","recipeProcess","recipeHashtag","AddRecipeWrapperContainer","AddRecipeButtonContainer","AddRecipeLineContainer","hr","TitleAndLinkTextAreaContainer","textarea","TextAreaStyleContainer","AddRecipe","useState","nonVegan","setNonVegan","initialLocalState","id","localState","setLocalState","onChangeHandler","event","objectCopy","currentTarget","name","value","onChangeHandlerRadio","onChange","checked","alert","uuidv1","console","log","payload","VeganRecipes","filter","NonVeganRecipes","FooterContainer","small","Footer","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","recipes","action","newRecipe","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6699ba6.chunk.js","sourcesContent":["//App.tsx\r\nexport const PATH_ALL_RECIPES = '/allrecipes'\r\nexport const PATH_V_RECIPES = '/vegan'\r\nexport const PATH_NV_RECIPES = '/nonvegan'\r\nexport const PATH_ADD_NEW_RECIPE = '/addnewrecipe'\r\n//App.tsx\r\n\r\n//RecipesReducer.ts\r\n//hashtags\r\nexport const VEGAN_HT = '#vegan'\r\nexport const NON_VEGAN_HT = '#non-vegan'\r\n\r\n//actioTypes\r\nexport const DEFAULT_RECIPES_AT = 'DEFAULT_RECIPES'\r\nexport const ADD_RECIPE_AT = 'ADD_RECIPE'\r\nexport const ALL_RECIPES_AT = 'ALL_RECIPES'\r\n\r\n//default vegan recipe\r\nexport const DEFAULT_VEGAN_RECIPE_TITLE = 'Creamy VeganRecipes Pasta'\r\nexport const DEFAULT_VEGAN_RECIPE_IMG_LINK = 'https://cdn.loveandlemons.com/' +\r\n  'wp-content/uploads/2017/10/vegan-pasta.jpg';\r\nexport const DEFAULT_VEGAN_RECIPE_INGREDIENTS =\r\n  '2½ cups small shell pasta\\n' +\r\n  '1 tablespoon extra-virgin olive oil\\n' +\r\n  '1 small yellow onion, chopped\\n' +\r\n  '5 cups broccoli florets, chopped stems, and leaves (keep stems separate)\\n' +\r\n  '¼ cup toasted pine nuts\\n' +\r\n  'lemon wedges, for serving'\r\nexport const DEFAULT_VEGAN_RECIPE_PROCESS =\r\n  'Make the sauce: In a blender, combine the white beans, broth, lemon ' +\r\n  'juice, olive oil, nutritional yeast, garlic, onion powder, salt, and ' +\r\n  'pepper, and blend until smooth. Set aside.\\n' +\r\n  'Bring a large pot of salted water to a boil. Prepare the pasta according' +\r\n  ' to the instructions on the package, cooking until al dente. Drain and' +\r\n  ' set aside.\\n' +\r\n  'Heat 1 tablespoon of olive oil in a large skillet over medium heat.' +\r\n  ' Add the onion and sauté until soft, about 5 minutes.\\n' +\r\n  'Stir in the chopped broccoli stems and cook for another 3 to 5 minutes' +\r\n  ' or until tender. Add the broccoli florets and leaves and a splash of' +\r\n  ' water or vegetable broth. Cover and turn off the heat.\\n' +\r\n  'Allow the broccoli to steam for 2 to 3 minutes or until tender but still' +\r\n  ' bright green. Add the pasta, then stir in ¾ of the sauce, adding more' +\r\n  ' broth if the sauce is too dry.\\n' +\r\n  'Season to taste with more salt, pepper and lemon juice, as desired, and' +\r\n  ' portion into bowls. Divide the remaining sauce onto each bowl. Top with' +\r\n  ' the pine nuts and serve with lemon wedges on the side.'\r\n\r\n//default non-vegan recipe\r\nexport const DEFAULT_NON_VEGAN_RECIPE_TITLE = 'The Classic Burger'\r\nexport const DEFAULT_NON_VEGAN_RECIPE_IMG_LINK = 'https://imagesvc.meredithcorp' +\r\n  '.io/v3/mm/image?url=https%3A%2' +\r\n  'F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F19%2F2005%2F06%2F2' +\r\n  '2%2Fclassic-burgers-u.jpg'\r\nexport const DEFAULT_NON_VEGAN_RECIPE_INGREDIENTS =\r\n  '1 pound ground lean (7% fat) beef\\n' +\r\n  '1 large egg\\n' +\r\n  '½ cup minced onion\\n' +\r\n  '¼ cup fine dried bread crumbs\\n' +\r\n  '1 tablespoon Worcestershire\\n' +\r\n  '1 or 2 cloves garlic, peeled and minced\\n' +\r\n  'About 1/2 teaspoon salt\\n' +\r\n  'About 1/4 teaspoon pepper\\n' +\r\n  '4 hamburger buns (4 in. wide), split\\n' +\r\n  'About 1/4 cup mayonnaise\\n' +\r\n  'About 1/4 cup ketchup\\n' +\r\n  '4 iceberg lettuce leaves, rinsed and crisped\\n' +\r\n  '1 firm-ripe tomato, cored and thinly sliced\\n' +\r\n  '4 thin slices red onion\\n'\r\nexport const DEFAULT_NON_VEGAN_RECIPE_PROCESS =\r\n  'Step 1' +\r\n  'In a bowl, mix ground beef, egg, onion, bread crumbs, Worcestershire, ' +\r\n  'garlic, 1/2 teaspoon salt, and 1/4 teaspoon pepper until well blended. ' +\r\n  'Divide mixture into four equal portions and shape each into a patty ' +\r\n  'about 4 inches wide.\\n' +\r\n  'Step 2' +\r\n  'Lay burgers on an oiled barbecue grill over a solid bed of hot coals or ' +\r\n  'high heat on a gas grill (you can hold your hand at grill level only 2 ' +\r\n  'to 3 seconds); close lid on gas grill. Cook burgers, turning once, ' +\r\n  'until browned on both sides and no longer pink inside (cut to test), ' +\r\n  '7 to 8 minutes total. Remove from grill.\\n' +\r\n  'Step 3' +\r\n  'Lay buns, cut side down, on grill and cook until lightly toasted, ' +\r\n  '30 seconds to 1 minute.\\n' +\r\n  'Step 4' +\r\n  'Spread mayonnaise and ketchup on bun bottoms. Add lettuce, tomato, ' +\r\n  'burger, onion, and salt and pepper to taste. Set bun tops in place.\\n'\r\n//RecipesReducer.ts\r\n\r\n//Menu.tsx\r\n//buttons titles\r\nexport const SHOW_ALL_RECIPES_BTN = 'Show all recipes'\r\nexport const ADD_NEW_RECIPE_BTN = 'Add new recipe'\r\nexport const SHOW_NV_RECIPES_BTN = 'Show non-vegan recipes'\r\nexport const SHOW_V_RECIPES_BTN = 'Show vegan recipes'\r\nexport const DELETE_ALL_RECIPES_BTN = 'Delete all added recipes'\r\n//Menu.tsx\r\n\r\n//Header.tsx\r\nexport const HEADER_TITLE = 'Recipe Book'\r\n//Header.tsx\r\n\r\n//AddRecipe.tsx\r\nexport const USER_ALERT_MSG = 'Please fill in all the input fields!'\r\n//AddRecipe.tsx","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 33.3333333%;\r\n  background: white;\r\n`\r\nexport const TitleContainer = styled.div`\r\n  font-size: 10vmin;\r\n  font-family: \"Sen\", sans-serif;\r\n  color: #1c203b;\r\n`\r\nexport const CircleContainer = styled.div`\r\n  height: 5vmin;\r\n  width: 5vmin;\r\n  background: #ffcc00;\r\n  border-radius: 100%;\r\n  margin-bottom: 7vmin;\r\n  animation-name: bounce-7;\r\n  animation-timing-function: cubic-bezier(0.28, 0.84, 0.42, 1);\r\n  animation-duration: 2s;\r\n`\r\nexport const LinkStyle = {\r\n  flex: '0 1 30%',\r\n  textDecoration: 'none',\r\n  color: 'black',\r\n}","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport * as Constant from '../../constants'\r\nimport * as Style from './HeaderStyle'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Style.HeaderContainer>\r\n      <Link\r\n        to={Constant.PATH_ALL_RECIPES}\r\n        style={Style.LinkStyle}\r\n      >\r\n        <Style.TitleContainer>\r\n          {Constant.HEADER_TITLE}\r\n        </Style.TitleContainer>\r\n      </Link>\r\n      <Style.CircleContainer>\r\n      </Style.CircleContainer>\r\n    </Style.HeaderContainer>\r\n  )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const MenuWrapperContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const MenuBlockContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nexport const MenuButtonContainer = styled.div`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  letter-spacing: 1px;\r\n  padding: 13px 50px 13px;\r\n  outline: 0;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n  position: relative;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  margin: 15px;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    background-color: #ffcc00;\r\n    width: 100%;\r\n    z-index: -1;\r\n    position: absolute;\r\n    height: 100%;\r\n    top: 7px;\r\n    left: 7px;\r\n    transition: 0.2s;\r\n  }\r\n\r\n  &:hover::after {\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n`\r\nexport const LinkStyle = {\r\n  flex: '0 1 30%',\r\n  textDecoration: 'none',\r\n  color: 'black',\r\n}","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as Constant from '../../constants'\r\nimport * as Style from './MenuStyle'\r\n\r\nexport const Menu = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const SetDefaultRecipesAC = () => {\r\n    const action = {type: Constant.DEFAULT_RECIPES_AT};\r\n    dispatch(action);\r\n  }\r\n\r\n  return (\r\n    <Style.MenuWrapperContainer>\r\n      <Style.MenuBlockContainer>\r\n        <Link to={Constant.PATH_ALL_RECIPES} style={Style.LinkStyle}>\r\n          <Style.MenuButtonContainer>\r\n            {Constant.SHOW_ALL_RECIPES_BTN}\r\n          </Style.MenuButtonContainer>\r\n        </Link>\r\n        <Link to={Constant.PATH_ADD_NEW_RECIPE} style={Style.LinkStyle}>\r\n          <Style.MenuButtonContainer>\r\n            {Constant.ADD_NEW_RECIPE_BTN}\r\n          </Style.MenuButtonContainer>\r\n        </Link>\r\n      </Style.MenuBlockContainer>\r\n      <Style.MenuBlockContainer>\r\n        <Link to={Constant.PATH_NV_RECIPES} style={Style.LinkStyle}>\r\n          <Style.MenuButtonContainer>\r\n            {Constant.SHOW_NV_RECIPES_BTN}\r\n          </Style.MenuButtonContainer>\r\n        </Link>\r\n        <Link to={Constant.PATH_V_RECIPES} style={Style.LinkStyle}>\r\n          <Style.MenuButtonContainer>\r\n            {Constant.SHOW_V_RECIPES_BTN}\r\n          </Style.MenuButtonContainer>\r\n        </Link>\r\n        <Link to={Constant.PATH_ALL_RECIPES} style={Style.LinkStyle}>\r\n          <Style.MenuButtonContainer onClick={SetDefaultRecipesAC}>\r\n            {Constant.DELETE_ALL_RECIPES_BTN}\r\n          </Style.MenuButtonContainer>\r\n        </Link>\r\n      </Style.MenuBlockContainer>\r\n    </Style.MenuWrapperContainer>\r\n  )\r\n}\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n  const stateAsString = JSON.stringify(state)\r\n  localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n  let state = defaultState\r\n  const stateAsString = localStorage.getItem(key)\r\n  if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n  return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\n// type StateType = {\r\n//   x: string\r\n//   y: number\r\n// }\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\n// saveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\n// const state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import styled from \"styled-components\";\r\n\r\nexport const TestRecipesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  margin: 10px;\r\n`\r\nexport const TestRecipeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  vertical-align: center;\r\n  width: 96%;\r\n  margin: 20px auto;\r\n  text-align: center;\r\n  border: 1px solid #ffcc00;\r\n`\r\nexport const TestRecipeHashtagContainer = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nexport const RecipesContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 10px;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\nexport const RecipeContainer = styled.div`\r\n  max-width: 30%;\r\n  margin: 20px auto;\r\n  text-align: center;\r\n  border: 1px solid #ffcc00;\r\n\r\n  @media (max-width: 768px) {\r\n    max-width: 100%;\r\n  }\r\n`\r\nexport const RecipeImgContainer = styled.img`\r\n  max-width: 50%;\r\n  height: auto;\r\n  padding: 20px 10px 10px 10px;\r\n`\r\nexport const RecipeIngredientsContainer = styled.div`\r\n  border-bottom: 1px solid #ffcc00;\r\n  padding: 10px;\r\n  max-width: 80%;\r\n  margin: 0 auto;\r\n`\r\nexport const RecipeProcessContainer = styled.div`\r\n  border-bottom: 1px solid #ffcc00;\r\n  padding: 10px;\r\n  max-width: 80%;\r\n  margin: 0 auto;\r\n`\r\nexport const RecipeHashtagContainer = styled.div`\r\n  padding: 10px;\r\n`","import {payloadType} from \"../../store/RecipesReducer\";\r\nimport {restoreState} from \"../localStorage/LocalStorage\";\r\nimport * as Style from './PagesStyle'\r\n\r\nexport const AllRecipes = () => {\r\n  const allRecipes: Array<payloadType> = restoreState<Array<payloadType>>(\r\n    'state', []\r\n  );\r\n\r\n  const renderRecipes = allRecipes.map((item:any, index) => {\r\n    return (\r\n      <Style.RecipeContainer key={index}>\r\n        <h3>\r\n          {item.recipeTitle}\r\n        </h3>\r\n        <Style.RecipeImgContainer\r\n          src={item.recipeIMGLink}\r\n          alt={item.recipeTitle}\r\n        />\r\n        <Style.RecipeIngredientsContainer>\r\n          <h4>\r\n            Ingredients\r\n          </h4>\r\n          {item.recipeIngredients}\r\n        </Style.RecipeIngredientsContainer>\r\n        <Style.RecipeProcessContainer>\r\n          <h4>\r\n            Process\r\n          </h4>\r\n          {item.recipeProcess}\r\n        </Style.RecipeProcessContainer>\r\n        <Style.RecipeHashtagContainer>\r\n          {item.recipeHashtag}\r\n        </Style.RecipeHashtagContainer>\r\n      </Style.RecipeContainer>\r\n    )\r\n  });\r\n\r\n  // const renderRecipes = allRecipes.map((item:any, index) => {\r\n  //   return (\r\n  //     <Style.TestRecipeContainer key={index}>\r\n  //       <Style.TestRecipeHashtagContainer>\r\n  //         {item.recipeTitle}\r\n  //       </Style.TestRecipeHashtagContainer>\r\n  //       <Style.TestRecipeHashtagContainer>\r\n  //         {item.recipeHashtag}\r\n  //       </Style.TestRecipeHashtagContainer>\r\n  //     </Style.TestRecipeContainer>\r\n  //   )\r\n  // });\r\n  //\r\n  // const renderHeader = () => {\r\n  //   return(\r\n  //     <Style.TestRecipeContainer>\r\n  //       <h2>\r\n  //         Header\r\n  //       </h2>\r\n  //       <h2>\r\n  //         Hashtag\r\n  //       </h2>\r\n  //     </Style.TestRecipeContainer>\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n    <Style.RecipesContainer>\r\n      {renderRecipes}\r\n    </Style.RecipesContainer>\r\n  )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const AddRecipeWrapperContainer = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`\r\nexport const AddRecipeButtonContainer = styled.div`\r\n  max-width: 30%;\r\n  text-align: center;\r\n  flex: 0 1 30%;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  letter-spacing: 1px;\r\n  padding: 13px 50px 13px;\r\n  outline: 0;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n  position: relative;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  margin: 15px auto;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    background-color: #ffcc00;\r\n    width: 100%;\r\n    z-index: -1;\r\n    position: absolute;\r\n    height: 100%;\r\n    top: 7px;\r\n    left: 7px;\r\n    transition: 0.2s;\r\n  }\r\n\r\n  &:hover::after {\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n`\r\nexport const AddRecipeLineContainer = styled.hr`\r\n  overflow: visible;\r\n  border: 0;\r\n  content: \"\";\r\n  background-color: #ffcc00;\r\n  display: block;\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    background-color: #ffcc00;\r\n    display: block;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    left: -32px;\r\n    animation: dot-move-left 1s ease-out forwards;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    background-color: #ffcc00;\r\n    display: block;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    left: 32px;\r\n    animation: dot-move-right 1s ease-out forwards;\r\n  }\r\n}\r\n\r\n@keyframes dot-move-right {\r\n  0% {\r\n    left: 0;\r\n  }\r\n  100% {\r\n    left: 32px;\r\n  }\r\n}\r\n\r\n@keyframes dot-move-left {\r\n  0% {\r\n    left: 0;\r\n  }\r\n  100% {\r\n    left: -32px;\r\n  }\r\n}\r\n\r\n{`\r\nexport const TitleAndLinkTextAreaContainer = styled.textarea`\r\n  width: 35%;\r\n  height: 50px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    height: 20vh;\r\n  }\r\n`\r\nexport const TextAreaStyleContainer = styled.textarea`\r\n  width: 35%;\r\n  height: 200px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    height: 20vh;\r\n  }\r\n`\r\n","import {GiFruitBowl, GiSteak, GiCook} from \"react-icons/gi\";\r\nimport {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {v1 as uuidv1} from 'uuid';\r\nimport * as Constant from '../../constants'\r\nimport * as Style from './AddRecipeStyle'\r\n\r\nexport const AddRecipe = () => {\r\n  const [nonVegan, setNonVegan] = useState(true);\r\n\r\n  const initialLocalState = {\r\n    recipeTitle: '',\r\n    recipeIMGLink: '',\r\n    recipeIngredients: '',\r\n    recipeProcess: '',\r\n    recipeHashtag: '',\r\n    id: ''\r\n  }\r\n\r\n  type InitialStateType = {\r\n    recipeTitle: string,\r\n    recipeIMGLink: string,\r\n    recipeIngredients: string,\r\n    recipeProcess: string,\r\n    recipeHashtag: string,\r\n    id: string\r\n  }\r\n\r\n  type StateKeysType =  keyof InitialStateType\r\n\r\n  const [localState, setLocalState] = useState<InitialStateType>(initialLocalState);\r\n\r\n  const onChangeHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const objectCopy = {...localState};\r\n    objectCopy[event.currentTarget.name as StateKeysType] = event.currentTarget.value;\r\n    setLocalState(objectCopy);\r\n  }\r\n\r\n  const onChangeHandlerRadio = () => {\r\n    setNonVegan(!nonVegan);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const AddRecipeAC = () => {\r\n    const action = {type: Constant.ADD_RECIPE_AT, payload: localState};\r\n    dispatch(action);\r\n  }\r\n\r\n  const addRecipeHandler = () => {\r\n    if (\r\n      localState.recipeTitle === '' ||\r\n      localState.recipeProcess === '' ||\r\n      localState.recipeIngredients === '' ||\r\n      localState.recipeIMGLink === ''\r\n    ) {\r\n      alert(Constant.USER_ALERT_MSG)\r\n    } else {\r\n      localState['recipeHashtag'] = nonVegan ?\r\n        Constant.NON_VEGAN_HT :\r\n        Constant.VEGAN_HT;\r\n      localState['id'] = uuidv1();\r\n      console.log(localState.recipeHashtag);\r\n      AddRecipeAC();\r\n      setLocalState(initialLocalState);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Style.AddRecipeWrapperContainer>\r\n      <h2>Adding a new recipe</h2>\r\n\r\n      <div>Recipe title:</div>\r\n      <Style.TitleAndLinkTextAreaContainer\r\n        value={localState.recipeTitle}\r\n        onChange={onChangeHandler}\r\n        name={'recipeTitle'}\r\n      />\r\n\r\n      <Style.AddRecipeLineContainer/>\r\n\r\n      <div>IMG link:</div>\r\n      <Style.TitleAndLinkTextAreaContainer\r\n        value={localState.recipeIMGLink}\r\n        onChange={onChangeHandler}\r\n        name={'recipeIMGLink'}\r\n      />\r\n\r\n      <Style.AddRecipeLineContainer/>\r\n\r\n      <div>Ingredients:</div>\r\n      <Style.TextAreaStyleContainer\r\n        value={localState.recipeIngredients}\r\n        onChange={onChangeHandler}\r\n        name={'recipeIngredients'}\r\n      />\r\n\r\n      <Style.AddRecipeLineContainer/>\r\n\r\n      <div>Process:</div>\r\n      <Style.TextAreaStyleContainer\r\n        value={localState.recipeProcess}\r\n        onChange={onChangeHandler}\r\n        name={'recipeProcess'}\r\n      />\r\n\r\n      <Style.AddRecipeLineContainer/>\r\n\r\n      <input\r\n        type=\"radio\"\r\n        value={Constant.VEGAN_HT}\r\n        checked={!nonVegan}\r\n        onChange={onChangeHandlerRadio}\r\n      />\r\n      #vegan <GiFruitBowl/>\r\n      <br/>\r\n      <input\r\n        type=\"radio\"\r\n        value={Constant.NON_VEGAN_HT}\r\n        checked={nonVegan}\r\n        onChange={onChangeHandlerRadio}\r\n      />\r\n      #non-vegan <GiSteak/>\r\n\r\n      <Style.AddRecipeLineContainer/>\r\n\r\n      <Style.AddRecipeButtonContainer onClick={addRecipeHandler}>\r\n        Add recipe <GiCook/>\r\n      </Style.AddRecipeButtonContainer>\r\n    </Style.AddRecipeWrapperContainer>\r\n  )\r\n}\r\n","import {payloadType} from \"../../store/RecipesReducer\";\r\nimport {restoreState} from \"../localStorage/LocalStorage\";\r\nimport * as Constant from '../../constants'\r\nimport * as Style from './PagesStyle'\r\n\r\nexport const VeganRecipes = () => {\r\n  const allRecipes: Array<payloadType> = restoreState<Array<payloadType>>(\r\n    'state', []\r\n  )\r\n\r\n  const veganRecipes = allRecipes.filter(\r\n    item => item.recipeHashtag === Constant.VEGAN_HT\r\n  );\r\n\r\n  const renderRecipes = veganRecipes.map((item, index) => {\r\n    return (\r\n      <Style.RecipeContainer key={index}>\r\n        <h3>\r\n          {item.recipeTitle}\r\n        </h3>\r\n        <Style.RecipeImgContainer\r\n          src={item.recipeIMGLink}\r\n          alt={item.recipeTitle}/>\r\n        <Style.RecipeIngredientsContainer>\r\n          <h4>\r\n            Ingredients\r\n          </h4>\r\n          {item.recipeIngredients}\r\n        </Style.RecipeIngredientsContainer>\r\n        <Style.RecipeProcessContainer>\r\n          <h4>\r\n            Process\r\n          </h4>\r\n          {item.recipeProcess}\r\n        </Style.RecipeProcessContainer>\r\n        <Style.RecipeHashtagContainer>\r\n          {item.recipeHashtag}\r\n        </Style.RecipeHashtagContainer>\r\n      </Style.RecipeContainer>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Style.RecipesContainer>\r\n      {renderRecipes}\r\n    </Style.RecipesContainer>\r\n  )\r\n}\r\n","import {payloadType} from \"../../store/RecipesReducer\";\r\nimport {restoreState} from \"../localStorage/LocalStorage\";\r\nimport * as Constant from '../../constants'\r\nimport * as Style from './PagesStyle'\r\n\r\nexport const NonVeganRecipes = () => {\r\n  const allRecipes: Array<payloadType> = restoreState<Array<payloadType>>(\r\n    'state', []\r\n  )\r\n\r\n  const nonVeganRecipes = allRecipes.filter(\r\n    item => item.recipeHashtag === Constant.NON_VEGAN_HT\r\n  );\r\n\r\n  const renderRecipes = nonVeganRecipes.map(\r\n    (item, index) => {\r\n    return (\r\n      <Style.RecipeContainer key={index}>\r\n        <h3>\r\n          {item.recipeTitle}\r\n        </h3>\r\n        <Style.RecipeImgContainer\r\n          src={item.recipeIMGLink}\r\n          alt={item.recipeTitle}/>\r\n        <Style.RecipeIngredientsContainer>\r\n          <h4>\r\n            Ingredients\r\n          </h4>\r\n          {item.recipeIngredients}\r\n        </Style.RecipeIngredientsContainer>\r\n        <Style.RecipeProcessContainer>\r\n          <h4>\r\n            Process\r\n          </h4>\r\n          {item.recipeProcess}\r\n        </Style.RecipeProcessContainer>\r\n        <Style.RecipeHashtagContainer>\r\n          {item.recipeHashtag}\r\n        </Style.RecipeHashtagContainer>\r\n      </Style.RecipeContainer>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Style.RecipesContainer>\r\n      {renderRecipes}\r\n    </Style.RecipesContainer>\r\n  )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterContainer = styled.small`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 5.3333333%;\r\n  background: white;\r\n  border-top: 1px solid #ffcc00;\r\n`","import * as Style from './FooterStyle'\r\n\r\nexport const Footer = () => {\r\n  return(\r\n    <Style.FooterContainer>\r\n      The application was created by Artem Borisov\r\n    </Style.FooterContainer>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\nimport * as Constant from './constants'\n\nimport {Header} from \"./components/Header/Header\";\nimport {Menu} from \"./components/Menu/Menu\";\nimport {AllRecipes} from \"./components/Pages/AllRecipes\";\nimport {AddRecipe} from \"./components/AddRecipe/AddRecipe\";\nimport {VeganRecipes} from \"./components/Pages/VeganRecipes\";\nimport {NonVeganRecipes} from \"./components/Pages/NonVeganRecipes\";\nimport {Footer} from \"./components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <Menu/>\n      <Switch>\n        <Route path={Constant.PATH_ALL_RECIPES} component={AllRecipes}/>\n        <Route path={Constant.PATH_V_RECIPES} component={VeganRecipes}/>\n        <Route path={Constant.PATH_NV_RECIPES} component={NonVeganRecipes}/>\n        <Route path={Constant.PATH_ADD_NEW_RECIPE} component={AddRecipe}/>\n        <Route path=\"/\" component={AllRecipes}/>\n      </Switch>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v1 as uuidv1 } from 'uuid';\r\nimport {restoreState, saveState} from \"../components/localStorage/LocalStorage\";\r\nimport * as Constant from '../constants'\r\n\r\nexport type payloadType = {\r\n  recipeTitle: string;\r\n  recipeIMGLink: string;\r\n  recipeIngredients: string;\r\n  recipeProcess: string;\r\n  recipeHashtag: '#vegan' | '#non-vegan';\r\n  id: string;\r\n}\r\n\r\ntype actionType = {\r\n  type: 'DEFAULT_RECIPES' | 'ADD_RECIPE' | 'ALL_RECIPES'\r\n  payload?: payloadType\r\n}\r\n\r\nexport const defaultState = [\r\n  {\r\n    recipeTitle: Constant.DEFAULT_VEGAN_RECIPE_TITLE,\r\n    recipeIMGLink: Constant.DEFAULT_VEGAN_RECIPE_IMG_LINK,\r\n    recipeIngredients: Constant.DEFAULT_VEGAN_RECIPE_INGREDIENTS,\r\n    recipeProcess: Constant.DEFAULT_VEGAN_RECIPE_PROCESS,\r\n    recipeHashtag: Constant.VEGAN_HT,\r\n    id: uuidv1(),\r\n  },\r\n  {\r\n    recipeTitle: Constant.DEFAULT_NON_VEGAN_RECIPE_TITLE,\r\n    recipeIMGLink: Constant.DEFAULT_NON_VEGAN_RECIPE_IMG_LINK,\r\n    recipeIngredients: Constant.DEFAULT_NON_VEGAN_RECIPE_INGREDIENTS,\r\n    recipeProcess: Constant.DEFAULT_NON_VEGAN_RECIPE_PROCESS,\r\n    recipeHashtag: Constant.NON_VEGAN_HT,\r\n    id: uuidv1(),\r\n  }\r\n]\r\n\r\n// defaultState => case: setRecipes\r\n// go to ui component create useEffect\r\n\r\n// useEffect => with deps []\r\n\r\n// useEffect(() => {\r\n//   dispatch(actionCreator());\r\n// }, []); => empty array it's dependency => зависимости\r\n// without [], [] => empty array, [tags] => work when change deps => tags\r\n\r\n// first render component => [] empty\r\n\r\n// ui => const state = useSelector... => get state\r\n\r\n// const qwe = useSelector<AllStateType, string>(state => state)\r\n\r\n// second useEffect(saveState('state', state from useSelector), [])\r\n\r\n//useEffect\r\n\r\nexport const recipesReducer = (\r\n  state = defaultState,\r\n  action: actionType\r\n) => {\r\n  switch (action.type) {\r\n    case Constant.DEFAULT_RECIPES_AT:\r\n      saveState('state', defaultState);\r\n      return defaultState\r\n    case Constant.ADD_RECIPE_AT:\r\n      const newRecipe = {\r\n        recipeTitle: action.payload?.recipeTitle,\r\n        recipeIMGLink: action.payload?.recipeIMGLink,\r\n        recipeIngredients: action.payload?.recipeIngredients,\r\n        recipeProcess: action.payload?.recipeProcess,\r\n        recipeHashtag: action.payload?.recipeHashtag,\r\n      }\r\n      saveState('state', [...state, newRecipe]);\r\n      // const allRecipes: Array<payloadType> = restoreState<Array<payloadType>>('state', [])\r\n      // return [...state, newRecipe]\r\n      return restoreState<Array<payloadType>>('state', [])\r\n    case Constant.ALL_RECIPES_AT:\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {recipesReducer} from \"./RecipesReducer\";\r\nimport {createStore, combineReducers} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nconst rootReducer = combineReducers({\r\n  recipes: recipesReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport type rootReducerType = ReturnType<typeof rootReducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n      <App/>\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}